[{"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\index.tsx":"1","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\App.tsx":"2","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\index.ts":"3","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\Maps.tsx":"4","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\AppBar.tsx":"5","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\hooks\\useTypeSelector.ts":"6","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\hooks\\useAcrion.ts":"7","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\reducers\\index.ts":"8","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\UI\\Pallets.tsx":"9","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\reducers\\mapsReducers.ts":"10","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\reducers\\toolsReducers.ts":"11","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\UI\\DialogInfo.tsx":"12","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\action-creator\\index.ts":"13","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\action-creator\\maps.ts":"14","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\action-creator\\tools.ts":"15","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\types\\tools.ts":"16","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\types\\maps.ts":"17","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\api\\index.ts":"18"},{"size":307,"mtime":1683850515500,"results":"19","hashOfConfig":"20"},{"size":253,"mtime":1683850515492,"results":"21","hashOfConfig":"20"},{"size":345,"mtime":1683850515504,"results":"22","hashOfConfig":"20"},{"size":1176,"mtime":1683850515496,"results":"23","hashOfConfig":"20"},{"size":4236,"mtime":1683850515496,"results":"24","hashOfConfig":"20"},{"size":189,"mtime":1683850515500,"results":"25","hashOfConfig":"20"},{"size":276,"mtime":1683850515496,"results":"26","hashOfConfig":"20"},{"size":295,"mtime":1683850515504,"results":"27","hashOfConfig":"20"},{"size":2100,"mtime":1683850515496,"results":"28","hashOfConfig":"20"},{"size":1860,"mtime":1683850515504,"results":"29","hashOfConfig":"20"},{"size":639,"mtime":1683850515504,"results":"30","hashOfConfig":"20"},{"size":3815,"mtime":1683850515496,"results":"31","hashOfConfig":"20"},{"size":169,"mtime":1683850515500,"results":"32","hashOfConfig":"20"},{"size":1401,"mtime":1683850515500,"results":"33","hashOfConfig":"20"},{"size":651,"mtime":1683850515504,"results":"34","hashOfConfig":"20"},{"size":560,"mtime":1683850515516,"results":"35","hashOfConfig":"20"},{"size":916,"mtime":1683850515516,"results":"36","hashOfConfig":"20"},{"size":912,"mtime":1683850515492,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1850o10",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\index.tsx",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\App.tsx",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\index.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\Maps.tsx",["99","100","101","102","103","104","105"],[],"import React, { ChangeEventHandler, useEffect } from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypeSelector';\r\nimport { useAction } from '../hooks/useAcrion';\r\nimport { Box, Button, Container, Grid, Input } from \"@mui/material\";\r\nimport Pallete from './UI/Pallets';\r\n\r\n\r\nconst MapsPalete: React.FC = () => {\r\n    const { data, loading, error, codes } = useTypedSelector(state => state.maps);\r\n    const { edit, load} = useTypedSelector(state => state.tools);\r\n    const { getWeatherByCodes } = useAction();\r\n    const { getCityCode } = useAction();\r\n    const initialNames = 'Kyiv';\r\n    useEffect(() => {\r\n        getCityCode(initialNames)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getWeatherByCodes(codes)\r\n    }, [codes, load]);\r\n\r\n\r\n    if (loading) {\r\n        return <> load</>\r\n    } else if (error) {\r\n        return <> error</>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ display: \"grid\", alignItems: \"center\", width: \"100%\", flexGrow: 1 }}>\r\n                <Grid sx={{ display: \"flex\" }}>\r\n                    <Pallete data = {data} />\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MapsPalete;","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\AppBar.tsx",["106","107","108"],[],"import React, { ChangeEventHandler } from 'react';\r\nimport { Box, AppBar, Button, Input, Toolbar, Typography, Switch } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { useAction } from '../hooks/useAcrion';\r\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { useTypedSelector } from '../hooks/useTypeSelector';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '14ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\nconst DEFAULT_CITY_NAME = 'London'\r\n\r\nlet status = true;\r\nconst AppMapsBar: React.FC = () => {\r\n    let [rotateLeftIconStyles, setRotateLeftIconStyles] = useState(\r\n        {\r\n            cursor:'pointer',\r\n            mr: 10,\r\n            transform: 'rotate(0deg)',\r\n            transition: '1s'\r\n        });\r\n    let [nameCity, setNameCity] = useState(DEFAULT_CITY_NAME);\r\n\r\n    const {getCityCode, setLoading, setEditing } = useAction();\r\n    const {edit} = useTypedSelector(state => state.tools);\r\n    \r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        setNameCity(e.target.value);\r\n    }\r\n\r\n    const reloadFetch = () => {\r\n        if(status) {\r\n            status = false;\r\n            setLoading(status)\r\n        }else {\r\n            status = true;\r\n            setLoading(status)\r\n        }\r\n    }\r\n    const editStatusChange = (e:any) => {\r\n        setEditing(e.target.checked)\r\n        \r\n    }\r\n   \r\n    const handleSubmit = () => {\r\n        getCityCode(nameCity)\r\n        setNameCity('')\r\n    }\r\n    const rotateAnimation = () => {\r\n        setRotateLeftIconStyles(\r\n            {   \r\n                cursor:'pointer',\r\n                mr: 10,\r\n                transform: 'rotate(-360deg)',\r\n                transition: '0.7s',\r\n\r\n            });\r\n        setTimeout(() => {\r\n            setRotateLeftIconStyles({\r\n                cursor:'pointer',\r\n                mr: 10,\r\n                transform: 'rotate(0deg)',\r\n                transition: '1s'\r\n            })\r\n        }, 1000)\r\n    }\r\n    return (\r\n        <AppBar position=\"static\" color='inherit' sx={{ flexGrow: 1, display: 'flex' }}>\r\n            <Toolbar>\r\n{/*remark */}\r\n                <RotateLeftIcon sx={rotateLeftIconStyles} fontSize='large' onClick={() => {rotateAnimation(); reloadFetch()}} />\r\n\r\n\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    component=\"div\"\r\n                    sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\r\n                >\r\n                    What is the weather in your town ?\r\n                </Typography>\r\n                <Typography>\r\n                    Editing\r\n                </Typography>\r\n                <Switch onChange = {editStatusChange}color='warning'/>\r\n\r\n                <Search sx={{ mr: 2, marginRight:\"5%\"}} onChange={handleChange}>\r\n                    \r\n                    <StyledInputBase\r\n                        placeholder=\"What`s your town ?\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        value = {nameCity}\r\n                    />\r\n                </Search>\r\n                <Button sx={{ edge: 'end', color: 'black', transition: '1s' }} onClick={handleSubmit}> add </Button>\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default AppMapsBar;","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\hooks\\useTypeSelector.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\hooks\\useAcrion.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\reducers\\index.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\UI\\Pallets.tsx",["109","110","111","112","113","114","115"],[],"import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Icon, Typography, Box} from \"@mui/material\"\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { useAction } from \"../../hooks/useAcrion\";\r\nimport DialogInfo from \"./DialogInfo\";\r\nimport {Card, CardActions, CardContent, Button} from \"@mui/material\"\r\n\r\ninterface PalleteProps {\r\n    data: any[];\r\n}\r\n\r\nconst Pallete: React.FC<PalleteProps> = ({ data }): any => {\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const { edit, dialogId } = useTypedSelector(state => state.tools);\r\n    const { deleteCity, setDialogId } = useAction();\r\n\r\n    const handleClick = (id: string, e: any) => {\r\n        if (edit) {\r\n            deleteCity(Number(id))\r\n        }\r\n        if (!edit) {\r\n            setDialogOpen(true);\r\n            setDialogId(Number(id));\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {data.map(e =>\r\n                <div key={e.id} style={{margin:'10px', borderRadius: \"10px\", minWidth:'15%'}}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant = \"h6\" color=\"text.secondary\" gutterBottom>\r\n                           {e.name}\r\n                        </Typography>\r\n                        \r\n                        <Typography variant=\"body1\">\r\n                            {Math.floor(e.main.temp) + '°C'} <br />\r\n                            {e.weather[0].description}\r\n                        </Typography>\r\n                        \r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button onClick={() => handleClick(e.id, e)} sx = {{color:edit? `#AC54FF`: 'black'}} size=\"small\">{edit? 'Delete' : 'More info'}</Button>\r\n                       \r\n                    </CardActions>\r\n                </Card>\r\n                </div>\r\n            )\r\n            }\r\n            {edit == false ? <DialogInfo data={data} setDialogOpen={setDialogOpen} dialogOpen={dialogOpen} /> : <></>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Pallete;","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\reducers\\mapsReducers.ts",["116"],[],"import { MapsActionTypes, MapsState } from \"../../types/maps\"\r\nimport { MapsAction } from \"../../types/maps\"\r\n// Todo update DEFAULT_CITY TO ARR INIT LOCAL STR\r\nconst DEFAULT_CITY = 703448;\r\nconst savedCityCodes = localStorage.getItem('CityCodes');\r\nconst getInitialCityCodes = ():number[] => {\r\n    if(!savedCityCodes || !JSON.parse(savedCityCodes)) {\r\n        return [DEFAULT_CITY]\r\n    }\r\n    return JSON.parse(savedCityCodes)\r\n}\r\n\r\nconst initialState: MapsState = {\r\n    data: [],\r\n    codes:getInitialCityCodes(),\r\n    loading:false,\r\n    error:null\r\n}\r\n\r\nexport const mapsReducer = (state:MapsState = initialState, action:MapsAction): MapsState => {\r\n    switch (action.type){\r\n        case MapsActionTypes.FETCH_MAPS:\r\n            return {...state, loading:true}\r\n        case MapsActionTypes.FETCH_MAPS_SUCCESS:\r\n            return {...state, loading:false, data: action.payload}\r\n        case MapsActionTypes.FETCH_MAPS_ERROR:\r\n            return {...state, loading:false, error: action.payload}\r\n        case MapsActionTypes.ADD_MAP:\r\n            if(state.codes.includes(action.payload)){\r\n                return state\r\n            }\r\n            const updatedCodes = [...state.codes, action.payload];\r\n            localStorage.setItem('CityCodes', JSON.stringify(updatedCodes));\r\n            return {...state, codes:updatedCodes}\r\n        case MapsActionTypes.DELETE_MAP:\r\n            // Todo: refilter\r\n            const updatedCodesAfterRemove = state.codes.reduce((arr:number[], e) => {\r\n            if(e != action.payload) {\r\n                arr.push(e);\r\n            }\r\n            return arr;\r\n            }, [])\r\n            localStorage.setItem('CityCodes', JSON.stringify(updatedCodesAfterRemove))\r\n            return {...state, loading:false, codes: updatedCodesAfterRemove}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\reducers\\toolsReducers.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\components\\UI\\DialogInfo.tsx",["117","118","119"],[],"import React from 'react';\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { useAction } from \"../../hooks/useAcrion\";\r\nimport { Typography, Card, CardContent, DialogContent, DialogActions, Dialog, Button, Link } from '@mui/material';\r\n\r\n\r\ninterface DialogInfoProps {\r\n    data: any[];\r\n    setDialogOpen: Function;\r\n    dialogOpen: boolean;\r\n}\r\nconst DialogInfo: React.FC<DialogInfoProps> = ({ data, setDialogOpen, dialogOpen }): any => {\r\n    const { dialogId } = useTypedSelector(state => state.tools);\r\n    let currentData: any = {};\r\n\r\n    if (!dialogId || !data) return <> </>\r\n    currentData = data.find(obj => obj.id === dialogId);\r\n\r\n    if (!currentData) return <> </>\r\n    const DateConvert = (prop: any): string => {\r\n        const date = new Date(prop);\r\n        const hours = date.getHours();\r\n        const minutes = date.getMinutes();\r\n        return `${hours}:${minutes}`\r\n    }\r\n\r\n    const handleClickClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n    const celsium = '°C'\r\n    const DataDialogInfo = {\r\n        sys: {\r\n            sunrise: DateConvert(currentData.sys.sunrise),\r\n            sunset: DateConvert(currentData.sys.sunset)\r\n        },\r\n        main: {\r\n            feelsLike: currentData.main.feels_like,\r\n            tempNow: currentData.main.temp,\r\n            tempMax: currentData.main.temp_max,\r\n            tempMin: currentData.main.temp_min\r\n        },\r\n        sky: {\r\n            clouds: currentData.weather.description,\r\n            icon: `https://openweathermap.org/img/wn/${currentData.weather[0].icon}@2x.png`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth='lg'\r\n                open={dialogOpen}\r\n                onClose={handleClickClose}\r\n                sx={{}}\r\n            >\r\n                <DialogContent >\r\n                    <Card>\r\n                        <CardContent sx={{ backgroundColor: '#C4F9F6', display: 'grid', gridTemplateColumns: '1fr 2.5fr 1fr', justifyItems: 'center' }}>\r\n                            <Typography sx={{ typography: 'body1' }}>\r\n                                sun: <br />\r\n                                sunrise   {DataDialogInfo.sys.sunrise} <br />\r\n                                sunset    {DataDialogInfo.sys.sunset}    <br />\r\n                            </Typography>\r\n                            <Typography sx={{ typography: 'body1' }}>\r\n\r\n                            </Typography>\r\n                            <div style={{ flexGrow: '1', backgroundColor: '#ACAEFF', borderRadius: '5%' }}>\r\n\r\n                                <img src={DataDialogInfo.sky.icon} />\r\n\r\n                            </div>\r\n\r\n\r\n                        </CardContent>\r\n                        <CardContent sx={{ backgroundColor: '#F7FFB3', display: 'grid', gridTemplateColumns: '1fr 2.5fr 1fr', justifyItems: 'center' }}>\r\n                            <Typography sx={{ typography: 'body1' }}>\r\n                                temperature: <br />\r\n                                now: {DataDialogInfo.main.tempNow}{celsium}<br />\r\n                                feels like: {DataDialogInfo.main.feelsLike}{celsium}<br />\r\n                                max: {DataDialogInfo.main.tempMax}{celsium}<br />\r\n                                min: {DataDialogInfo.main.tempMin}{celsium}<br />\r\n                            </Typography>\r\n\r\n\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickClose} autoFocus>\r\n                        ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n// Todo: router dialog\r\nexport default DialogInfo;","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\action-creator\\index.ts",["120"],[],"import * as MapsActionCreators from './maps'\r\nimport * as ToolsActionCreators from './tools'\r\nexport default {\r\n    ...MapsActionCreators,\r\n    ...ToolsActionCreators\r\n}","C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\action-creator\\maps.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\store\\action-creator\\tools.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\types\\tools.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\types\\maps.ts",[],[],"C:\\Users\\danie\\OneDrive\\Desktop\\WWIYT\\src\\api\\index.ts",["121"],[],"import axios from 'axios'\r\n\r\nconst {REACT_APP_CONVERSION_DATA_API_KEY:API_KEY, REACT_APP_API_URL:API_URL} = process.env;\r\nexport default class ApiService<Class> {\r\n    async getCityCode(name:string) {\r\n            try {\r\n                if (name) {\r\n                    const response = await axios.get(`${API_URL}weather?q=${name}&appid=${API_KEY}`)\r\n                    return response.data.id;\r\n                }\r\n            }catch (error) {\r\n                console.log(\"error in getCityCode\")\r\n                return null\r\n            }\r\n    }\r\n\r\n    async getWeather(codes:number[]) {\r\n        try {\r\n            if(codes && codes.length > 0) {\r\n                const response = await axios.get(`${API_URL}group?id=${codes.join(',')}&appid=${API_KEY}&units=metric`);\r\n                return response.data.list;\r\n            }\r\n        }catch {\r\n            return null\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\n",{"ruleId":"122","severity":1,"message":"123","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":35},{"ruleId":"122","severity":1,"message":"126","line":4,"column":15,"nodeType":"124","messageId":"125","endLine":4,"endColumn":21},{"ruleId":"122","severity":1,"message":"127","line":4,"column":23,"nodeType":"124","messageId":"125","endLine":4,"endColumn":32},{"ruleId":"122","severity":1,"message":"128","line":4,"column":40,"nodeType":"124","messageId":"125","endLine":4,"endColumn":45},{"ruleId":"122","severity":1,"message":"129","line":10,"column":13,"nodeType":"124","messageId":"125","endLine":10,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":16,"column":8,"nodeType":"132","endLine":16,"endColumn":10,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":20,"column":8,"nodeType":"132","endLine":20,"endColumn":21,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"128","line":2,"column":31,"nodeType":"124","messageId":"125","endLine":2,"endColumn":36},{"ruleId":"122","severity":1,"message":"129","line":55,"column":12,"nodeType":"124","messageId":"125","endLine":55,"endColumn":16},{"ruleId":"122","severity":1,"message":"137","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"138","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"139","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"140","line":3,"column":16,"nodeType":"124","messageId":"125","endLine":3,"endColumn":20},{"ruleId":"122","severity":1,"message":"136","line":3,"column":34,"nodeType":"124","messageId":"125","endLine":3,"endColumn":37},{"ruleId":"122","severity":1,"message":"141","line":15,"column":19,"nodeType":"124","messageId":"125","endLine":15,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":51,"column":19,"nodeType":"144","messageId":"145","endLine":51,"endColumn":21},{"ruleId":"142","severity":1,"message":"146","line":38,"column":18,"nodeType":"144","messageId":"145","endLine":38,"endColumn":20},{"ruleId":"122","severity":1,"message":"147","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":19},{"ruleId":"122","severity":1,"message":"138","line":4,"column":87,"nodeType":"124","messageId":"125","endLine":4,"endColumn":91},{"ruleId":"148","severity":1,"message":"149","line":70,"column":33,"nodeType":"150","endLine":70,"endColumn":70},{"ruleId":"151","severity":1,"message":"152","line":3,"column":1,"nodeType":"153","endLine":6,"endColumn":2},{"ruleId":"122","severity":1,"message":"154","line":4,"column":33,"nodeType":"124","messageId":"125","endLine":4,"endColumn":38},"@typescript-eslint/no-unused-vars","'ChangeEventHandler' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Container' is defined but never used.","'Input' is defined but never used.","'edit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCityCode'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has a missing dependency: 'getWeatherByCodes'. Either include it or remove the dependency array.",["156"],"'Box' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Icon' is defined but never used.","'dialogId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useAction' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Class' is defined but never used.",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [getCityCode]",{"range":"161","text":"162"},"Update the dependencies array to be: [codes, getWeatherByCodes, load]",{"range":"163","text":"164"},[663,665],"[getCityCode]",[734,747],"[codes, getWeatherByCodes, load]"]