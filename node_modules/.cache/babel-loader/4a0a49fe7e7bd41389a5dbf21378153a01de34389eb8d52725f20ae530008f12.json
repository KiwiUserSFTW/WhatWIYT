{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\WWIYT\\\\src\\\\components\\\\Maps.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useTypedSelector } from '../hooks/useTypeSelector';\nimport { useAction } from '../hooks/useAcrion';\nimport { Box, Grid } from \"@mui/material\";\nimport Pallete from './UI/Pallets';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapsPalete = () => {\n  _s();\n  const {\n    data,\n    loading,\n    error,\n    codes\n  } = useTypedSelector(state => state.maps);\n  const {\n    edit,\n    load\n  } = useTypedSelector(state => state.tools);\n  const {\n    getWeatherByCodes\n  } = useAction();\n  const {\n    getCityCode\n  } = useAction();\n  const initialNames = 'Kyiv';\n  useEffect(() => {\n    getCityCode(initialNames);\n  }, []);\n  useEffect(() => {\n    getWeatherByCodes(codes);\n  }, [codes, load]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" load\"\n    }, void 0, false);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" error\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"grid\",\n        alignItems: \"center\",\n        width: \"100%\",\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        sx: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Pallete, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(MapsPalete, \"+MlZr/+TWXE0DdyZK8ecUpmX/S8=\", false, function () {\n  return [useTypedSelector, useTypedSelector, useAction, useAction];\n});\n_c = MapsPalete;\nexport default MapsPalete;\nvar _c;\n$RefreshReg$(_c, \"MapsPalete\");","map":{"version":3,"names":["React","useEffect","useTypedSelector","useAction","Box","Grid","Pallete","Fragment","_Fragment","jsxDEV","_jsxDEV","MapsPalete","_s","data","loading","error","codes","state","maps","edit","load","tools","getWeatherByCodes","getCityCode","initialNames","children","sx","display","alignItems","width","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/WWIYT/src/components/Maps.tsx"],"sourcesContent":["import React, { ChangeEventHandler, useEffect } from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypeSelector';\r\nimport { useAction } from '../hooks/useAcrion';\r\nimport { Box, Button, Container, Grid, Input } from \"@mui/material\";\r\nimport Pallete from './UI/Pallets';\r\n\r\n\r\nconst MapsPalete: React.FC = () => {\r\n    const { data, loading, error, codes } = useTypedSelector(state => state.maps);\r\n    const { edit, load} = useTypedSelector(state => state.tools);\r\n    const { getWeatherByCodes } = useAction();\r\n    const { getCityCode } = useAction();\r\n    const initialNames = 'Kyiv';\r\n    useEffect(() => {\r\n        getCityCode(initialNames)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getWeatherByCodes(codes)\r\n    }, [codes, load]);\r\n\r\n\r\n    if (loading) {\r\n        return <> load</>\r\n    } else if (error) {\r\n        return <> error</>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ display: \"grid\", alignItems: \"center\", width: \"100%\", flexGrow: 1 }}>\r\n                <Grid sx={{ display: \"flex\" }}>\r\n                    <Pallete data = {data} />\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MapsPalete;"],"mappings":";;AAAA,OAAOA,KAAK,IAAwBC,SAAS,QAAQ,OAAO;AAC5D,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,GAAG,EAAqBC,IAAI,QAAe,eAAe;AACnE,OAAOC,OAAO,MAAM,cAAc;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGd,gBAAgB,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAC7E,MAAM;IAAEC,IAAI;IAAEC;EAAI,CAAC,GAAGlB,gBAAgB,CAACe,KAAK,IAAIA,KAAK,CAACI,KAAK,CAAC;EAC5D,MAAM;IAAEC;EAAkB,CAAC,GAAGnB,SAAS,CAAC,CAAC;EACzC,MAAM;IAAEoB;EAAY,CAAC,GAAGpB,SAAS,CAAC,CAAC;EACnC,MAAMqB,YAAY,GAAG,MAAM;EAC3BvB,SAAS,CAAC,MAAM;IACZsB,WAAW,CAACC,YAAY,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACZqB,iBAAiB,CAACN,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACA,KAAK,EAAEI,IAAI,CAAC,CAAC;EAGjB,IAAIN,OAAO,EAAE;IACT,oBAAOJ,OAAA,CAAAF,SAAA;MAAAiB,QAAA,EAAE;IAAK,gBAAE,CAAC;EACrB,CAAC,MAAM,IAAIV,KAAK,EAAE;IACd,oBAAOL,OAAA,CAAAF,SAAA;MAAAiB,QAAA,EAAE;IAAM,gBAAE,CAAC;EACtB;EAEA,oBACIf,OAAA,CAAAF,SAAA;IAAAiB,QAAA,eACIf,OAAA,CAACN,GAAG;MAACsB,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAAAL,QAAA,eAC3Ef,OAAA,CAACL,IAAI;QAACqB,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAF,QAAA,eAC1Bf,OAAA,CAACJ,OAAO;UAACO,IAAI,EAAIA;QAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAtB,EAAA,CA9BKD,UAAoB;EAAA,QACkBT,gBAAgB,EAClCA,gBAAgB,EACRC,SAAS,EACfA,SAAS;AAAA;AAAAgC,EAAA,GAJ/BxB,UAAoB;AAgC1B,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}